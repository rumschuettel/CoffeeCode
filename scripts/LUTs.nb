(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     27772,        550]
NotebookOptionsPosition[     26348,        517]
NotebookOutlinePosition[     26693,        532]
CellTagsIndexPosition[     26650,        529]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Bitmasks", "Subsection",
 CellChangeTimes->{{3.7611215924118347`*^9, 
  3.7611215934311085`*^9}},ExpressionUUID->"f45218b7-9b60-4bff-a624-\
839c142a7d70"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
     "\"\<template<>\\nstruct Bitmasks<\>\"", "<>", "#1", "<>", 
      "\"\<> {\\n\>\"", "<>", "\[IndentingNewLine]", 
      "\"\<constexpr static \>\"", "<>", "#1", "<>", "\"\< lut1000[\>\"", "<>", 
      RowBox[{"ToString", "[", "#2", "]"}], "<>", "\"\<] = \>\"", "<>", 
      RowBox[{"ToString", "@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"2", "^", "n"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "0", ",", 
             RowBox[{"#2", "-", "1"}]}], "}"}]}], "]"}], "/.", 
         RowBox[{"m_Integer", "\[RuleDelayed]", 
          RowBox[{"(", 
           RowBox[{"\"\<0x\>\"", "<>", 
            RowBox[{"IntegerString", "[", 
             RowBox[{"m", ",", "16"}], "]"}], "<>", "#3"}], ")"}]}]}], 
        ")"}]}], "<>", "\"\<;\\n\>\"", "<>", "\[IndentingNewLine]", 
      "\"\<constexpr static \>\"", "<>", "#1", "<>", "\"\< lut0111[\>\"", "<>", 
      RowBox[{"ToString", "[", "#2", "]"}], "<>", "\"\<] = \>\"", "<>", 
      RowBox[{"ToString", "@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"2", "^", "n"}], "-", "1"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "0", ",", 
             RowBox[{"#2", "-", "1"}]}], "}"}]}], "]"}], "/.", 
         RowBox[{"m_Integer", "\[RuleDelayed]", 
          RowBox[{"(", 
           RowBox[{"\"\<0x\>\"", "<>", 
            RowBox[{"IntegerString", "[", 
             RowBox[{"m", ",", "16"}], "]"}], "<>", "#3"}], ")"}]}]}], 
        ")"}]}], "<>", "\"\<;\\n};\\n\>\""}], "\[IndentingNewLine]", ")"}], 
    "&"}], "@@@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<uint128_t\>\"", ",", "128", ",", "\"\<\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<uint16_t\>\"", ",", "16", ",", "\"\<\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<uint32_t\>\"", ",", "32", ",", "\"\<\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<uint64_t\>\"", ",", "64", ",", "\"\<ULL\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<boost::multiprecision::uint128_t\>\"", ",", "128", ",", 
       "\"\<_cppui128\>\""}], "}"}]}], "}"}]}], "//", "StringJoin"}]], "Input",
 CellChangeTimes->{{3.761121604241274*^9, 3.7611216343425884`*^9}, {
  3.7611216646247706`*^9, 3.7611217452551365`*^9}, {3.76112177932405*^9, 
  3.7611218245542774`*^9}, {3.7611218840719967`*^9, 
  3.7611218855613136`*^9}},ExpressionUUID->"a7c2846d-ac8f-43c7-810b-\
89954ce09c9d"],

Cell[BoxData["\<\"template<>\\nstruct Bitmasks<uint128_t> {\\nconstexpr \
static uint128_t lut1000[128] = {0x1, 0x2, 0x4, 0x8, 0x10, 0x20, 0x40, 0x80, \
0x100, 0x200, 0x400, 0x800, 0x1000, 0x2000, 0x4000, 0x8000, 0x10000, 0x20000, \
0x40000, 0x80000, 0x100000, 0x200000, 0x400000, 0x800000, 0x1000000, \
0x2000000, 0x4000000, 0x8000000, 0x10000000, 0x20000000, 0x40000000, \
0x80000000, 0x100000000, 0x200000000, 0x400000000, 0x800000000, 0x1000000000, \
0x2000000000, 0x4000000000, 0x8000000000, 0x10000000000, 0x20000000000, \
0x40000000000, 0x80000000000, 0x100000000000, 0x200000000000, 0x400000000000, \
0x800000000000, 0x1000000000000, 0x2000000000000, 0x4000000000000, \
0x8000000000000, 0x10000000000000, 0x20000000000000, 0x40000000000000, \
0x80000000000000, 0x100000000000000, 0x200000000000000, 0x400000000000000, \
0x800000000000000, 0x1000000000000000, 0x2000000000000000, \
0x4000000000000000, 0x8000000000000000, 0x10000000000000000, \
0x20000000000000000, 0x40000000000000000, 0x80000000000000000, \
0x100000000000000000, 0x200000000000000000, 0x400000000000000000, \
0x800000000000000000, 0x1000000000000000000, 0x2000000000000000000, \
0x4000000000000000000, 0x8000000000000000000, 0x10000000000000000000, \
0x20000000000000000000, 0x40000000000000000000, 0x80000000000000000000, \
0x100000000000000000000, 0x200000000000000000000, 0x400000000000000000000, \
0x800000000000000000000, 0x1000000000000000000000, 0x2000000000000000000000, \
0x4000000000000000000000, 0x8000000000000000000000, \
0x10000000000000000000000, 0x20000000000000000000000, \
0x40000000000000000000000, 0x80000000000000000000000, \
0x100000000000000000000000, 0x200000000000000000000000, \
0x400000000000000000000000, 0x800000000000000000000000, \
0x1000000000000000000000000, 0x2000000000000000000000000, \
0x4000000000000000000000000, 0x8000000000000000000000000, \
0x10000000000000000000000000, 0x20000000000000000000000000, \
0x40000000000000000000000000, 0x80000000000000000000000000, \
0x100000000000000000000000000, 0x200000000000000000000000000, \
0x400000000000000000000000000, 0x800000000000000000000000000, \
0x1000000000000000000000000000, 0x2000000000000000000000000000, \
0x4000000000000000000000000000, 0x8000000000000000000000000000, \
0x10000000000000000000000000000, 0x20000000000000000000000000000, \
0x40000000000000000000000000000, 0x80000000000000000000000000000, \
0x100000000000000000000000000000, 0x200000000000000000000000000000, \
0x400000000000000000000000000000, 0x800000000000000000000000000000, \
0x1000000000000000000000000000000, 0x2000000000000000000000000000000, \
0x4000000000000000000000000000000, 0x8000000000000000000000000000000, \
0x10000000000000000000000000000000, 0x20000000000000000000000000000000, \
0x40000000000000000000000000000000, \
0x80000000000000000000000000000000};\\nconstexpr static uint128_t \
lut0111[128] = {0x0, 0x1, 0x3, 0x7, 0xf, 0x1f, 0x3f, 0x7f, 0xff, 0x1ff, \
0x3ff, 0x7ff, 0xfff, 0x1fff, 0x3fff, 0x7fff, 0xffff, 0x1ffff, 0x3ffff, \
0x7ffff, 0xfffff, 0x1fffff, 0x3fffff, 0x7fffff, 0xffffff, 0x1ffffff, \
0x3ffffff, 0x7ffffff, 0xfffffff, 0x1fffffff, 0x3fffffff, 0x7fffffff, \
0xffffffff, 0x1ffffffff, 0x3ffffffff, 0x7ffffffff, 0xfffffffff, 0x1fffffffff, \
0x3fffffffff, 0x7fffffffff, 0xffffffffff, 0x1ffffffffff, 0x3ffffffffff, \
0x7ffffffffff, 0xfffffffffff, 0x1fffffffffff, 0x3fffffffffff, 0x7fffffffffff, \
0xffffffffffff, 0x1ffffffffffff, 0x3ffffffffffff, 0x7ffffffffffff, \
0xfffffffffffff, 0x1fffffffffffff, 0x3fffffffffffff, 0x7fffffffffffff, \
0xffffffffffffff, 0x1ffffffffffffff, 0x3ffffffffffffff, 0x7ffffffffffffff, \
0xfffffffffffffff, 0x1fffffffffffffff, 0x3fffffffffffffff, \
0x7fffffffffffffff, 0xffffffffffffffff, 0x1ffffffffffffffff, \
0x3ffffffffffffffff, 0x7ffffffffffffffff, 0xfffffffffffffffff, \
0x1fffffffffffffffff, 0x3fffffffffffffffff, 0x7fffffffffffffffff, \
0xffffffffffffffffff, 0x1ffffffffffffffffff, 0x3ffffffffffffffffff, \
0x7ffffffffffffffffff, 0xfffffffffffffffffff, 0x1fffffffffffffffffff, \
0x3fffffffffffffffffff, 0x7fffffffffffffffffff, 0xffffffffffffffffffff, \
0x1ffffffffffffffffffff, 0x3ffffffffffffffffffff, 0x7ffffffffffffffffffff, \
0xfffffffffffffffffffff, 0x1fffffffffffffffffffff, 0x3fffffffffffffffffffff, \
0x7fffffffffffffffffffff, 0xffffffffffffffffffffff, \
0x1ffffffffffffffffffffff, 0x3ffffffffffffffffffffff, \
0x7ffffffffffffffffffffff, 0xfffffffffffffffffffffff, \
0x1fffffffffffffffffffffff, 0x3fffffffffffffffffffffff, \
0x7fffffffffffffffffffffff, 0xffffffffffffffffffffffff, \
0x1ffffffffffffffffffffffff, 0x3ffffffffffffffffffffffff, \
0x7ffffffffffffffffffffffff, 0xfffffffffffffffffffffffff, \
0x1fffffffffffffffffffffffff, 0x3fffffffffffffffffffffffff, \
0x7fffffffffffffffffffffffff, 0xffffffffffffffffffffffffff, \
0x1ffffffffffffffffffffffffff, 0x3ffffffffffffffffffffffffff, \
0x7ffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffff, \
0x1fffffffffffffffffffffffffff, 0x3fffffffffffffffffffffffffff, \
0x7fffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffff, \
0x1ffffffffffffffffffffffffffff, 0x3ffffffffffffffffffffffffffff, \
0x7ffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffff, \
0x1fffffffffffffffffffffffffffff, 0x3fffffffffffffffffffffffffffff, \
0x7fffffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffffff, \
0x1ffffffffffffffffffffffffffffff, 0x3ffffffffffffffffffffffffffffff, \
0x7ffffffffffffffffffffffffffffff, 0xfffffffffffffffffffffffffffffff, \
0x1fffffffffffffffffffffffffffffff, 0x3fffffffffffffffffffffffffffffff, \
0x7fffffffffffffffffffffffffffffff};\\ntemplate<>\\nstruct Bitmasks<uint16_t> \
{\\nconstexpr static uint16_t lut1000[16] = {0x1, 0x2, 0x4, 0x8, 0x10, 0x20, \
0x40, 0x80, 0x100, 0x200, 0x400, 0x800, 0x1000, 0x2000, 0x4000, \
0x8000};\\nconstexpr static uint16_t lut0111[16] = {0x0, 0x1, 0x3, 0x7, 0xf, \
0x1f, 0x3f, 0x7f, 0xff, 0x1ff, 0x3ff, 0x7ff, 0xfff, 0x1fff, 0x3fff, \
0x7fff};\\ntemplate<>\\nstruct Bitmasks<uint32_t> {\\nconstexpr static \
uint32_t lut1000[32] = {0x1, 0x2, 0x4, 0x8, 0x10, 0x20, 0x40, 0x80, 0x100, \
0x200, 0x400, 0x800, 0x1000, 0x2000, 0x4000, 0x8000, 0x10000, 0x20000, \
0x40000, 0x80000, 0x100000, 0x200000, 0x400000, 0x800000, 0x1000000, \
0x2000000, 0x4000000, 0x8000000, 0x10000000, 0x20000000, 0x40000000, \
0x80000000};\\nconstexpr static uint32_t lut0111[32] = {0x0, 0x1, 0x3, 0x7, \
0xf, 0x1f, 0x3f, 0x7f, 0xff, 0x1ff, 0x3ff, 0x7ff, 0xfff, 0x1fff, 0x3fff, \
0x7fff, 0xffff, 0x1ffff, 0x3ffff, 0x7ffff, 0xfffff, 0x1fffff, 0x3fffff, \
0x7fffff, 0xffffff, 0x1ffffff, 0x3ffffff, 0x7ffffff, 0xfffffff, 0x1fffffff, \
0x3fffffff, 0x7fffffff};\\ntemplate<>\\nstruct Bitmasks<uint64_t> \
{\\nconstexpr static uint64_t lut1000[64] = {0x1ULL, 0x2ULL, 0x4ULL, 0x8ULL, \
0x10ULL, 0x20ULL, 0x40ULL, 0x80ULL, 0x100ULL, 0x200ULL, 0x400ULL, 0x800ULL, \
0x1000ULL, 0x2000ULL, 0x4000ULL, 0x8000ULL, 0x10000ULL, 0x20000ULL, \
0x40000ULL, 0x80000ULL, 0x100000ULL, 0x200000ULL, 0x400000ULL, 0x800000ULL, \
0x1000000ULL, 0x2000000ULL, 0x4000000ULL, 0x8000000ULL, 0x10000000ULL, \
0x20000000ULL, 0x40000000ULL, 0x80000000ULL, 0x100000000ULL, 0x200000000ULL, \
0x400000000ULL, 0x800000000ULL, 0x1000000000ULL, 0x2000000000ULL, \
0x4000000000ULL, 0x8000000000ULL, 0x10000000000ULL, 0x20000000000ULL, \
0x40000000000ULL, 0x80000000000ULL, 0x100000000000ULL, 0x200000000000ULL, \
0x400000000000ULL, 0x800000000000ULL, 0x1000000000000ULL, 0x2000000000000ULL, \
0x4000000000000ULL, 0x8000000000000ULL, 0x10000000000000ULL, \
0x20000000000000ULL, 0x40000000000000ULL, 0x80000000000000ULL, \
0x100000000000000ULL, 0x200000000000000ULL, 0x400000000000000ULL, \
0x800000000000000ULL, 0x1000000000000000ULL, 0x2000000000000000ULL, \
0x4000000000000000ULL, 0x8000000000000000ULL};\\nconstexpr static uint64_t \
lut0111[64] = {0x0ULL, 0x1ULL, 0x3ULL, 0x7ULL, 0xfULL, 0x1fULL, 0x3fULL, \
0x7fULL, 0xffULL, 0x1ffULL, 0x3ffULL, 0x7ffULL, 0xfffULL, 0x1fffULL, \
0x3fffULL, 0x7fffULL, 0xffffULL, 0x1ffffULL, 0x3ffffULL, 0x7ffffULL, \
0xfffffULL, 0x1fffffULL, 0x3fffffULL, 0x7fffffULL, 0xffffffULL, 0x1ffffffULL, \
0x3ffffffULL, 0x7ffffffULL, 0xfffffffULL, 0x1fffffffULL, 0x3fffffffULL, \
0x7fffffffULL, 0xffffffffULL, 0x1ffffffffULL, 0x3ffffffffULL, 0x7ffffffffULL, \
0xfffffffffULL, 0x1fffffffffULL, 0x3fffffffffULL, 0x7fffffffffULL, \
0xffffffffffULL, 0x1ffffffffffULL, 0x3ffffffffffULL, 0x7ffffffffffULL, \
0xfffffffffffULL, 0x1fffffffffffULL, 0x3fffffffffffULL, 0x7fffffffffffULL, \
0xffffffffffffULL, 0x1ffffffffffffULL, 0x3ffffffffffffULL, \
0x7ffffffffffffULL, 0xfffffffffffffULL, 0x1fffffffffffffULL, \
0x3fffffffffffffULL, 0x7fffffffffffffULL, 0xffffffffffffffULL, \
0x1ffffffffffffffULL, 0x3ffffffffffffffULL, 0x7ffffffffffffffULL, \
0xfffffffffffffffULL, 0x1fffffffffffffffULL, 0x3fffffffffffffffULL, \
0x7fffffffffffffffULL};\\ntemplate<>\\nstruct \
Bitmasks<boost::multiprecision::uint128_t> {\\nconstexpr static \
boost::multiprecision::uint128_t lut1000[128] = {0x1_cppui128, 0x2_cppui128, \
0x4_cppui128, 0x8_cppui128, 0x10_cppui128, 0x20_cppui128, 0x40_cppui128, \
0x80_cppui128, 0x100_cppui128, 0x200_cppui128, 0x400_cppui128, \
0x800_cppui128, 0x1000_cppui128, 0x2000_cppui128, 0x4000_cppui128, \
0x8000_cppui128, 0x10000_cppui128, 0x20000_cppui128, 0x40000_cppui128, \
0x80000_cppui128, 0x100000_cppui128, 0x200000_cppui128, 0x400000_cppui128, \
0x800000_cppui128, 0x1000000_cppui128, 0x2000000_cppui128, \
0x4000000_cppui128, 0x8000000_cppui128, 0x10000000_cppui128, \
0x20000000_cppui128, 0x40000000_cppui128, 0x80000000_cppui128, \
0x100000000_cppui128, 0x200000000_cppui128, 0x400000000_cppui128, \
0x800000000_cppui128, 0x1000000000_cppui128, 0x2000000000_cppui128, \
0x4000000000_cppui128, 0x8000000000_cppui128, 0x10000000000_cppui128, \
0x20000000000_cppui128, 0x40000000000_cppui128, 0x80000000000_cppui128, \
0x100000000000_cppui128, 0x200000000000_cppui128, 0x400000000000_cppui128, \
0x800000000000_cppui128, 0x1000000000000_cppui128, 0x2000000000000_cppui128, \
0x4000000000000_cppui128, 0x8000000000000_cppui128, \
0x10000000000000_cppui128, 0x20000000000000_cppui128, \
0x40000000000000_cppui128, 0x80000000000000_cppui128, \
0x100000000000000_cppui128, 0x200000000000000_cppui128, \
0x400000000000000_cppui128, 0x800000000000000_cppui128, \
0x1000000000000000_cppui128, 0x2000000000000000_cppui128, \
0x4000000000000000_cppui128, 0x8000000000000000_cppui128, \
0x10000000000000000_cppui128, 0x20000000000000000_cppui128, \
0x40000000000000000_cppui128, 0x80000000000000000_cppui128, \
0x100000000000000000_cppui128, 0x200000000000000000_cppui128, \
0x400000000000000000_cppui128, 0x800000000000000000_cppui128, \
0x1000000000000000000_cppui128, 0x2000000000000000000_cppui128, \
0x4000000000000000000_cppui128, 0x8000000000000000000_cppui128, \
0x10000000000000000000_cppui128, 0x20000000000000000000_cppui128, \
0x40000000000000000000_cppui128, 0x80000000000000000000_cppui128, \
0x100000000000000000000_cppui128, 0x200000000000000000000_cppui128, \
0x400000000000000000000_cppui128, 0x800000000000000000000_cppui128, \
0x1000000000000000000000_cppui128, 0x2000000000000000000000_cppui128, \
0x4000000000000000000000_cppui128, 0x8000000000000000000000_cppui128, \
0x10000000000000000000000_cppui128, 0x20000000000000000000000_cppui128, \
0x40000000000000000000000_cppui128, 0x80000000000000000000000_cppui128, \
0x100000000000000000000000_cppui128, 0x200000000000000000000000_cppui128, \
0x400000000000000000000000_cppui128, 0x800000000000000000000000_cppui128, \
0x1000000000000000000000000_cppui128, 0x2000000000000000000000000_cppui128, \
0x4000000000000000000000000_cppui128, 0x8000000000000000000000000_cppui128, \
0x10000000000000000000000000_cppui128, 0x20000000000000000000000000_cppui128, \
0x40000000000000000000000000_cppui128, 0x80000000000000000000000000_cppui128, \
0x100000000000000000000000000_cppui128, \
0x200000000000000000000000000_cppui128, \
0x400000000000000000000000000_cppui128, \
0x800000000000000000000000000_cppui128, \
0x1000000000000000000000000000_cppui128, \
0x2000000000000000000000000000_cppui128, \
0x4000000000000000000000000000_cppui128, \
0x8000000000000000000000000000_cppui128, \
0x10000000000000000000000000000_cppui128, \
0x20000000000000000000000000000_cppui128, \
0x40000000000000000000000000000_cppui128, \
0x80000000000000000000000000000_cppui128, \
0x100000000000000000000000000000_cppui128, \
0x200000000000000000000000000000_cppui128, \
0x400000000000000000000000000000_cppui128, \
0x800000000000000000000000000000_cppui128, \
0x1000000000000000000000000000000_cppui128, \
0x2000000000000000000000000000000_cppui128, \
0x4000000000000000000000000000000_cppui128, \
0x8000000000000000000000000000000_cppui128, \
0x10000000000000000000000000000000_cppui128, \
0x20000000000000000000000000000000_cppui128, \
0x40000000000000000000000000000000_cppui128, \
0x80000000000000000000000000000000_cppui128};\\nconstexpr static \
boost::multiprecision::uint128_t lut0111[128] = {0x0_cppui128, 0x1_cppui128, \
0x3_cppui128, 0x7_cppui128, 0xf_cppui128, 0x1f_cppui128, 0x3f_cppui128, \
0x7f_cppui128, 0xff_cppui128, 0x1ff_cppui128, 0x3ff_cppui128, 0x7ff_cppui128, \
0xfff_cppui128, 0x1fff_cppui128, 0x3fff_cppui128, 0x7fff_cppui128, \
0xffff_cppui128, 0x1ffff_cppui128, 0x3ffff_cppui128, 0x7ffff_cppui128, \
0xfffff_cppui128, 0x1fffff_cppui128, 0x3fffff_cppui128, 0x7fffff_cppui128, \
0xffffff_cppui128, 0x1ffffff_cppui128, 0x3ffffff_cppui128, \
0x7ffffff_cppui128, 0xfffffff_cppui128, 0x1fffffff_cppui128, \
0x3fffffff_cppui128, 0x7fffffff_cppui128, 0xffffffff_cppui128, \
0x1ffffffff_cppui128, 0x3ffffffff_cppui128, 0x7ffffffff_cppui128, \
0xfffffffff_cppui128, 0x1fffffffff_cppui128, 0x3fffffffff_cppui128, \
0x7fffffffff_cppui128, 0xffffffffff_cppui128, 0x1ffffffffff_cppui128, \
0x3ffffffffff_cppui128, 0x7ffffffffff_cppui128, 0xfffffffffff_cppui128, \
0x1fffffffffff_cppui128, 0x3fffffffffff_cppui128, 0x7fffffffffff_cppui128, \
0xffffffffffff_cppui128, 0x1ffffffffffff_cppui128, 0x3ffffffffffff_cppui128, \
0x7ffffffffffff_cppui128, 0xfffffffffffff_cppui128, \
0x1fffffffffffff_cppui128, 0x3fffffffffffff_cppui128, \
0x7fffffffffffff_cppui128, 0xffffffffffffff_cppui128, \
0x1ffffffffffffff_cppui128, 0x3ffffffffffffff_cppui128, \
0x7ffffffffffffff_cppui128, 0xfffffffffffffff_cppui128, \
0x1fffffffffffffff_cppui128, 0x3fffffffffffffff_cppui128, \
0x7fffffffffffffff_cppui128, 0xffffffffffffffff_cppui128, \
0x1ffffffffffffffff_cppui128, 0x3ffffffffffffffff_cppui128, \
0x7ffffffffffffffff_cppui128, 0xfffffffffffffffff_cppui128, \
0x1fffffffffffffffff_cppui128, 0x3fffffffffffffffff_cppui128, \
0x7fffffffffffffffff_cppui128, 0xffffffffffffffffff_cppui128, \
0x1ffffffffffffffffff_cppui128, 0x3ffffffffffffffffff_cppui128, \
0x7ffffffffffffffffff_cppui128, 0xfffffffffffffffffff_cppui128, \
0x1fffffffffffffffffff_cppui128, 0x3fffffffffffffffffff_cppui128, \
0x7fffffffffffffffffff_cppui128, 0xffffffffffffffffffff_cppui128, \
0x1ffffffffffffffffffff_cppui128, 0x3ffffffffffffffffffff_cppui128, \
0x7ffffffffffffffffffff_cppui128, 0xfffffffffffffffffffff_cppui128, \
0x1fffffffffffffffffffff_cppui128, 0x3fffffffffffffffffffff_cppui128, \
0x7fffffffffffffffffffff_cppui128, 0xffffffffffffffffffffff_cppui128, \
0x1ffffffffffffffffffffff_cppui128, 0x3ffffffffffffffffffffff_cppui128, \
0x7ffffffffffffffffffffff_cppui128, 0xfffffffffffffffffffffff_cppui128, \
0x1fffffffffffffffffffffff_cppui128, 0x3fffffffffffffffffffffff_cppui128, \
0x7fffffffffffffffffffffff_cppui128, 0xffffffffffffffffffffffff_cppui128, \
0x1ffffffffffffffffffffffff_cppui128, 0x3ffffffffffffffffffffffff_cppui128, \
0x7ffffffffffffffffffffffff_cppui128, 0xfffffffffffffffffffffffff_cppui128, \
0x1fffffffffffffffffffffffff_cppui128, 0x3fffffffffffffffffffffffff_cppui128, \
0x7fffffffffffffffffffffffff_cppui128, 0xffffffffffffffffffffffffff_cppui128, \
0x1ffffffffffffffffffffffffff_cppui128, \
0x3ffffffffffffffffffffffffff_cppui128, \
0x7ffffffffffffffffffffffffff_cppui128, \
0xfffffffffffffffffffffffffff_cppui128, \
0x1fffffffffffffffffffffffffff_cppui128, \
0x3fffffffffffffffffffffffffff_cppui128, \
0x7fffffffffffffffffffffffffff_cppui128, \
0xffffffffffffffffffffffffffff_cppui128, \
0x1ffffffffffffffffffffffffffff_cppui128, \
0x3ffffffffffffffffffffffffffff_cppui128, \
0x7ffffffffffffffffffffffffffff_cppui128, \
0xfffffffffffffffffffffffffffff_cppui128, \
0x1fffffffffffffffffffffffffffff_cppui128, \
0x3fffffffffffffffffffffffffffff_cppui128, \
0x7fffffffffffffffffffffffffffff_cppui128, \
0xffffffffffffffffffffffffffffff_cppui128, \
0x1ffffffffffffffffffffffffffffff_cppui128, \
0x3ffffffffffffffffffffffffffffff_cppui128, \
0x7ffffffffffffffffffffffffffffff_cppui128, \
0xfffffffffffffffffffffffffffffff_cppui128, \
0x1fffffffffffffffffffffffffffffff_cppui128, \
0x3fffffffffffffffffffffffffffffff_cppui128, \
0x7fffffffffffffffffffffffffffffff_cppui128};\\n\"\>"], "Output",
 CellChangeTimes->{3.761121747475195*^9, 3.761121824952344*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"86d8b4ab-c0f8-4b84-b4b4-e1458bcae6c9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Binomial Coefficient Lookup Table", "Subsection",ExpressionUUID->"43bd579d-c271-40fd-a8b1-5a6ae0792b85"],

Cell["\<\
The string literal _cppui is for cpp_int; the numbers have to be in hex for \
this and precisely the correct length you want to support.\
\>", "Text",ExpressionUUID->"795416e2-e5db-4751-a311-98390b6be097"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
     "\"\<template<>\\nstruct BinomialCoefficient<\>\"", "<>", "#1", "<>", 
      "\"\<> {\\nconstexpr static \>\"", "<>", "#1", "<>", "\"\< lut[\>\"", "<>", 
      RowBox[{"ToString", "[", "#2", "]"}], "<>", "\"\<][\>\"", "<>", 
      RowBox[{"ToString", "[", "#2", "]"}], "<>", "\"\<] = \>\"", "<>", 
      RowBox[{"ToString", "@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Binomial", "[", 
            RowBox[{"n", ",", "k"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "0", ",", 
             RowBox[{"#2", "-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "0", ",", 
             RowBox[{"#2", "-", "1"}]}], "}"}]}], "]"}], "/.", 
         RowBox[{"m_Integer", "\[RuleDelayed]", 
          RowBox[{"(", 
           RowBox[{"\"\<0x\>\"", "<>", 
            RowBox[{"IntegerString", "[", 
             RowBox[{"m", ",", "16"}], "]"}], "<>", "#3"}], ")"}]}]}], 
        ")"}]}], "<>", 
      "\"\<;\\nconstexpr static inline decltype(lut)& get_lut() {\\nreturn \
lut;\\n}\\n};\\n\>\""}], ")"}], "&"}], "@@@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<uint8_t\>\"", ",", "8", ",", "\"\<\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<uint16_t\>\"", ",", "16", ",", "\"\<\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<uint32_t\>\"", ",", "32", ",", "\"\<\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<uint64_t\>\"", ",", "64", ",", "\"\<ULL\>\""}], "}"}]}], 
    "}"}]}], "//", "StringJoin"}]], "Input",
 CellChangeTimes->{{3.7611197924823084`*^9, 3.7611198432339334`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"7e809d1a-3705-4399-90d7-1c8dbd509140"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Factorial Lookup Table", "Subsection",ExpressionUUID->"6e2ede62-b5b9-41a8-b9d7-eb9ba2937a07"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Log2Factorial", "[", "m_", "]"}], ":=", 
  RowBox[{"Log2", "@", 
   RowBox[{"Factorial", "[", "m", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NextPowerOf2", "[", "m_", "]"}], ":=", 
  RowBox[{"2", "^", 
   RowBox[{"Ceiling", "@", 
    RowBox[{"Log2", "[", "m", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LargestFactorialForGivenWidth", "[", "w_", "]"}], ":=", 
  RowBox[{"LengthWhile", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Log2Factorial", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "1000"}], "}"}]}], "]"}], ",", 
    RowBox[{
     RowBox[{"#", "<", "w"}], "&"}]}], "]"}]}]}], "Input",
 CellLabel->
  "In[146]:=",ExpressionUUID->"fe787af7-6fd7-4691-878f-40e3817786ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"maxFac", "=", 
        RowBox[{"LargestFactorialForGivenWidth", "@", "#2"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{
       "\"\<template<>\\nstruct Factorial<\>\"", "<>", "#1", "<>", 
        "\"\<> {\\nconstexpr static \>\"", "<>", "#1", "<>", "\"\< lut[\>\"", 
        "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"maxFac", "+", "1"}], "]"}], "<>", "\"\<] = \>\"", "<>", 
        RowBox[{"ToString", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"n", "!"}], ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "0", ",", "maxFac"}], "}"}]}], "]"}], "/.", 
           RowBox[{"m_Integer", "\[RuleDelayed]", 
            RowBox[{"(", 
             RowBox[{"\"\<0x\>\"", "<>", 
              RowBox[{"IntegerString", "[", 
               RowBox[{"m", ",", "16"}], "]"}], "<>", "#3"}], ")"}]}]}], 
          ")"}]}], "<>", "\"\<;\\n};\\n\>\""}], ")"}]}], 
     "\[IndentingNewLine]", "]"}], "&"}], "@@@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<uint8_t\>\"", ",", "8", ",", "\"\<\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<uint16_t\>\"", ",", "16", ",", "\"\<\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<uint32_t\>\"", ",", "32", ",", "\"\<\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<uint64_t\>\"", ",", "64", ",", "\"\<ULL\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<boost::multiprecision::uint128_t\>\"", ",", "128", ",", 
       "\"\<_cppui128\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<boost::multiprecision::uint256_t\>\"", ",", "256", ",", 
       "\"\<_cppui256\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<boost::multiprecision::uint512_t\>\"", ",", "512", ",", 
       "\"\<_cppui512\>\""}], "}"}]}], "}"}]}], "//", "StringJoin"}]], "Input",
 CellLabel->
  "In[187]:=",ExpressionUUID->"467bdcd7-4dff-4f68-8f29-fca5a4a4793e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImportString", "[", 
  RowBox[{
  "\"\<{\\\"foo\\\": 123456789012345678901234567890.1234567890}\>\"", ",", 
   "\"\<RawJSON\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7611188643713474`*^9, 3.761118915488533*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"e2e036d4-0ed9-49e0-ac9a-a63e1ff7278b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"foo\"\>", "\[Rule]", 
   "1.23456789012345678901234567890123456789`39.0915149772127*^29"}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.761118878474681*^9, 3.7611189162494516`*^9}},
 CellLabel->"Out[74]=",ExpressionUUID->"a805a2b5-437a-4be7-a9dd-98dcaf5dae0c"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1904, 1021},
WindowMargins->{{1842, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 160, 3, 53, "Subsection",ExpressionUUID->"f45218b7-9b60-4bff-a624-839c142a7d70"],
Cell[CellGroupData[{
Cell[765, 29, 2627, 62, 86, "Input",ExpressionUUID->"a7c2846d-ac8f-43c7-810b-89954ce09c9d"],
Cell[3395, 93, 16875, 259, 1629, "Output",ExpressionUUID->"86d8b4ab-c0f8-4b84-b4b4-e1458bcae6c9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[20319, 358, 110, 0, 53, "Subsection",ExpressionUUID->"43bd579d-c271-40fd-a8b1-5a6ae0792b85"],
Cell[20432, 360, 215, 3, 34, "Text",ExpressionUUID->"795416e2-e5db-4751-a311-98390b6be097"],
Cell[20650, 365, 1821, 43, 67, "Input",ExpressionUUID->"7e809d1a-3705-4399-90d7-1c8dbd509140"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22508, 413, 99, 0, 53, "Subsection",ExpressionUUID->"6e2ede62-b5b9-41a8-b9d7-eb9ba2937a07"],
Cell[22610, 415, 804, 22, 67, "Input",ExpressionUUID->"fe787af7-6fd7-4691-878f-40e3817786ab"],
Cell[23417, 439, 2218, 56, 143, "Input",ExpressionUUID->"467bdcd7-4dff-4f68-8f29-fca5a4a4793e"],
Cell[CellGroupData[{
Cell[25660, 499, 319, 6, 28, "Input",ExpressionUUID->"e2e036d4-0ed9-49e0-ac9a-a63e1ff7278b"],
Cell[25982, 507, 338, 6, 35, "Output",ExpressionUUID->"a805a2b5-437a-4be7-a9dd-98dcaf5dae0c"]
}, Open  ]]
}, Open  ]]
}
]
*)

