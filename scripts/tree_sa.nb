(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     21400,        493]
NotebookOptionsPosition[     19894,        460]
NotebookOutlinePosition[     20228,        475]
CellTagsIndexPosition[     20185,        472]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Tree Simulated Annealing", "Title",ExpressionUUID->"ada263ce-7ba1-44a9-9aa2-0240e65b9f29"],

Cell["\<\
Note that for this to work as fast as possible it might make sense to compile \
the full solvers with OPTIMIZE_FOR_DEPOLARIZING=ON -- this can be set up with \
ccmake as usual (you can have one folder for each choice of this flag, and \
then just change the paths as needed).

I\[CloseCurlyQuote]ve tried figuring out where this bug comes from. I suspect \
it has to do with the way MM spawns processes, so I\[CloseCurlyQuote]m now \
explicitly killing them once their computation is done instead of trusting in \
MM to do so. This should be fixed in the CCInterface.nb now. In case this \
still occurs, try to follow the hint under \[OpenCurlyDoubleQuote]Build \
Environments\[CloseCurlyDoubleQuote] above where BuglessRunProcess is defined\
\
\>", "Text",ExpressionUUID->"6387751f-932c-4d80-8c1a-777180adb6ed"],

Cell[CellGroupData[{

Cell["Annealing Procedures", "Section",ExpressionUUID->"42c4d0b1-7120-4d9e-84f9-24f1a6df356b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "always", " ", "clear", " ", "names", " ", "of", " ", "functions", " ", 
      "that", " ", "are", " ", "defined", " ", "with"}], " ", ":="}], ",", 
    " ", 
    RowBox[{"as", " ", 
     RowBox[{"e", ".", "g", ".", " ", "if"}], " ", "you", " ", "change", " ", 
     "the", " ", "parameters", " ", "an", " ", "old", " ", "variant", " ", 
     "of", " ", "the", " ", "function", " ", "will", " ", "keep", " ", 
     "existing", " ", "in", " ", "the", " ", "kernel", " ", "until", " ", 
     "you", " ", "restart", " ", 
     RowBox[{"it", ".", " ", 
      RowBox[{"That", "'"}]}], "s", " ", "a", " ", "common", " ", "source", 
     " ", "of", " ", "weird", " ", 
     RowBox[{"bugs", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"It", "'"}], "s", " ", "also", " ", "good", " ", "to", " ", 
    "give", " ", "a", " ", "type", " ", "hint", " ", "to", " ", "function", 
    " ", "parameters", " ", "whenever", " ", "possible"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "switchLeaf", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"switchLeaf", "[", "G_Graph", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
       "leavesIndices", ",", "\[IndentingNewLine]", "leafIndex", ",", 
        "\[IndentingNewLine]", "leaf", ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "neighbour", ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "newG"}], "\[IndentingNewLine]", "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "get", " ", "random", " ", "vertex", " ", "with", " ", "degree", " ", 
         "1.", " ", "Note", " ", "that", " ", "vertex", " ", "index", " ", 
         "is", " ", "not", " ", "necessarily", " ", "equal", " ", "to", " ", 
         "vertex", " ", "name"}], ",", " ", 
        RowBox[{
        "so", " ", "once", " ", "we", " ", "pick", " ", "a", " ", "random", 
         " ", "position", " ", "of", " ", "a", " ", "vertex", " ", "we", " ", 
         "still", " ", "have", " ", "to", " ", "get", " ", "the", " ", 
         "actual", " ", "vertex", " ", "name", " ", "to", " ", "delete"}]}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"leavesIndices", "=", 
        RowBox[{"Flatten", "@", 
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{"VertexDegree", "@", "G"}], ",", "1"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"leafIndex", "=", 
        RowBox[{"RandomChoice", "@", "leavesIndices"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"leaf", "=", 
        RowBox[{
         RowBox[{"VertexList", "[", "G", "]"}], "\[LeftDoubleBracket]", 
         "leafIndex", "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "delete", " ", "edge", " ", "between", " ", "leaf", " ", "and", " ", 
         "neighbour"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"neighbour", "=", 
        RowBox[{"First", "@", 
         RowBox[{"AdjacencyList", "[", 
          RowBox[{"G", ",", "leaf"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"newG", "=", 
        RowBox[{"EdgeDelete", "[", 
         RowBox[{"G", ",", 
          RowBox[{"leaf", "\[UndirectedEdge]", "neighbour"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"add", " ", "new", " ", "random", " ", "edge"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"newG", "=", 
        RowBox[{"EdgeAdd", "[", 
         RowBox[{"newG", ",", 
          RowBox[{"leaf", "\[UndirectedEdge]", 
           RowBox[{"RandomChoice", "@", 
            RowBox[{"Complement", "[", 
             RowBox[{
              RowBox[{"VertexList", "@", "G"}], ",", 
              RowBox[{"{", 
               RowBox[{"leaf", ",", "neighbour"}], "}"}]}], "]"}]}]}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"return", " ", "with", " ", "index", " ", 
         RowBox[{"labels", ".", " ", "Vertex"}], " ", "names", " ", "should", 
         " ", "be", " ", "avoided", " ", "whenever", " ", "possible"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Graph", "[", 
        RowBox[{"newG", ",", 
         RowBox[{"VertexLabels", "\[Rule]", "\"\<Index\>\""}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[153]:=",ExpressionUUID->"c5d8558a-8990-432e-b18c-3acac8670e79"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"switchLeaf", "[", 
       RowBox[{"PathGraph", "@", 
        RowBox[{"Range", "@", "20"}]}], "]"}], ";"}], ",", 
     RowBox[{"{", "10000", "}"}]}], "]"}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellLabel->
  "In[135]:=",ExpressionUUID->"c27facb9-73d1-42ed-8e80-18a26636f2e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "also", " ", "try", " ", "to", " ", "give", " ", "function", " ", 
     "parameters", " ", "longer", " ", "names"}], ",", " ", 
    RowBox[{"otherwise", " ", 
     RowBox[{"it", "'"}], "s", " ", "hard", " ", "to", " ", "guess", " ", 
     "what", " ", "each", " ", "parameter", " ", "does"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "simAnn", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"simAnn", "[", 
     RowBox[{"costFunction_", ",", "initialG_Graph", ",", 
      RowBox[{"maximumTemperature_Real:", "100"}], ",", 
      RowBox[{"annealingSteps_Integer:", "100"}], ",", 
      RowBox[{"annealingIterations_Integer:", "1000"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
       "curf", ",", "curG", ",", "\[IndentingNewLine]", "topf", ",", "topG"}],
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"curG", "=", "initialG"}], ";", "\[IndentingNewLine]", 
       RowBox[{"curf", "=", 
        RowBox[{"costFunction", "@", "curG"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"topf", "=", "curf"}], ";", "\[IndentingNewLine]", 
       RowBox[{"topG", "=", "curG"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Range", "[", "annealingSteps", "]"}], "//", 
        RowBox[{"Map", "[", 
         RowBox[{"Function", "[", 
          RowBox[{"currentStep", ",", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "keep", " ", "variables", " ", "as", " ", "local", " ", "as", 
                " ", "possible"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"temperature", "=", 
                RowBox[{"maximumTemperature", "/", "currentStep"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                "count", " ", "the", " ", "number", " ", "of", " ", "moves", 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{
                  "accepting", " ", "better", " ", "function", " ", "value"}],
                   ")"}], " ", "and", " ", "hops", " ", 
                 RowBox[{"(", 
                  RowBox[{
                  "accepting", " ", "worse", " ", "function", " ", "value"}], 
                  ")"}], " ", "for", " ", "diagnostics", " ", "purposes"}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{"hopCounter", "=", "0"}], ",", 
               RowBox[{"moveCounter", "=", "0"}]}], "\[IndentingNewLine]", 
              "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{
               "\"\<Annealing step: \>\"", ",", "currentStep", ",", 
                "\"\<, Temp: \>\"", ",", 
                RowBox[{"N", "[", "temperature", "]"}]}], "]"}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Range", "[", "annealingIterations", "]"}], "//", 
               RowBox[{"Map", "[", 
                RowBox[{"Function", "[", 
                 RowBox[{"iteration", ",", 
                  RowBox[{"Module", "[", 
                   RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"newG", "=", 
                    RowBox[{"switchLeaf", "[", "curG", "]"}]}], ",", 
                    "\[IndentingNewLine]", "newf"}], "\[IndentingNewLine]", 
                    "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{"disallow", " ", "disconnected", " ", 
                    RowBox[{"graphs", "?"}]}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"ConnectedGraphQ", "@", "newG"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "PrintTemporary", "[", "\"\<skipping disconnected\>\"", 
                    "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"Return", "[", "Module", "]"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"newf", "=", 
                    RowBox[{"costFunction", "[", "newG", "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{"new", " ", "best", " ", "found"}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"newf", ">", "curf"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"curf", "=", "newf"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"curG", "=", "newG"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"moveCounter", "++"}], ";"}], 
                    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "actually", " ", "hop", " ", "there", " ", "only", " ", 
                    "with", " ", "some", " ", "probability"}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"curf", "-", "newf"}], ")"}]}], "/", 
                    "temperature"}], "]"}], ">", 
                    RowBox[{"RandomReal", "[", "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"curf", "=", "newf"}], ";", " ", 
                    "\[IndentingNewLine]", 
                    RowBox[{"curG", "=", "newG"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"hopCounter", "++"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "display", " ", "that", " ", "we", " ", "found", " ", "a",
                     " ", "new", " ", "top", " ", "choice", " ", "this", " ", 
                    "iteration"}], " ", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"curf", ">", "topf"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"topf", "=", "curf"}], ";", 
                    RowBox[{"topG", "=", "curG"}], ";", 
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<Iteration: \>\"", ",", "iteration", ",", 
                    "\"\<, cI = \>\"", ",", "topf"}], "]"}], ";", 
                    RowBox[{"Print", "[", 
                    RowBox[{"Graph", "[", 
                    RowBox[{"topG", ",", 
                    RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
                    
                    RowBox[{"VertexStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"VertexCount", "[", "topG", "]"}], "\[Rule]", 
                    "Red"}], "}"}]}]}], "]"}], "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", "]"}]}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Print", "[", 
               RowBox[{
               "moveCounter", ",", "\"\< moves, \>\"", ",", "hopCounter", 
                ",", "\"\< hops\>\""}], "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<Best cI: \>\"", ",", "topf"}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Print", "[", "\"\<\\n\>\"", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Graph", "[", 
        RowBox[{"topG", ",", 
         RowBox[{"VertexStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"VertexCount", "[", "topG", "]"}], "\[Rule]", "Red"}], 
           "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.762288776514242*^9, 3.762288776607007*^9}, {
  3.762291590984096*^9, 3.762291591429267*^9}, {3.762463909687167*^9, 
  3.762463925895513*^9}, {3.7624639581376762`*^9, 3.762464030044289*^9}, {
  3.762464294131675*^9, 3.762464311537938*^9}, {3.7624643655297956`*^9, 
  3.76246437023599*^9}, {3.7625316330716543`*^9, 
  3.762531652008029*^9}},ExpressionUUID->"58152300-c898-46a6-81bd-\
97cb8dda7bf4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Annealing Tests", "Section",ExpressionUUID->"f4b7df2c-ac3d-4043-8e8d-9c2db25f5235"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cI", "[", "G_", "]"}], ":=", 
  RowBox[{
   RowBox[{"cI", "[", "G", "]"}], "=", 
   RowBox[{"CIMult", "@@", 
    RowBox[{"PauliActionCC", "[", 
     RowBox[{"G", ",", 
      RowBox[{
       RowBox[{"VertexCount", "[", "G", "]"}], "-", "1"}], ",", "0.1903", ",",
       "False"}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"cI", "[", 
  RowBox[{"StarGraph", "[", "6", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.762293400307219*^9, 3.7622934005005074`*^9}, {
  3.762461487623508*^9, 3.7624614902703238`*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"3a0b464c-23ed-4006-b451-150653f20ee5"],

Cell[BoxData[
 RowBox[{"H", "=", 
  RowBox[{"Nest", "[", 
   RowBox[{"switchLeaf", ",", 
    RowBox[{"PathGraph", "@", 
     RowBox[{"Range", "@", "14"}]}], ",", "25"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.762461504861196*^9, 3.762464048956254*^9, {3.762464383297173*^9, 
   3.7624643873004827`*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"3b45bbd0-97e4-4226-a580-2f50394fe4dc"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "estimateInitialTemperature", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"estimateInitialTemperature", "[", 
    RowBox[{"costFunction_", ",", "initialG_Graph", ",", 
     RowBox[{"numberTrials_Integer:", "100"}], ",", 
     RowBox[{"initialAcceptanceProbability_Real:", "0.8"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"functionEvaluations", ",", "initf"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"initf", "=", 
       RowBox[{"costFunction", "[", "initialG", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"functionEvaluations", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"costFunction", "[", 
           RowBox[{"switchLeaf", "[", "initialG", "]"}], "]"}], "-", 
          "initf"}], ",", "numberTrials"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Mean", "[", 
         RowBox[{"Select", "[", 
          RowBox[{"functionEvaluations", ",", 
           RowBox[{
            RowBox[{"0", "<", "#"}], "&"}]}], "]"}], "]"}]}], "/", 
       RowBox[{"Log", "[", "initialAcceptanceProbability", "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7622904953778133`*^9, 3.762290634076415*^9}, {
   3.762291072189322*^9, 3.762291211023603*^9}, 3.76229128293502*^9, {
   3.762291420410871*^9, 3.762291421637072*^9}, {3.7622914534254427`*^9, 
   3.762291507291958*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"9f773b9b-352a-48f9-98f8-0acf7a2eafc5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{"estimateInitialTemperature", "[", 
    RowBox[{"cI", ",", "H"}], "]"}]}], ";"}]], "Input",ExpressionUUID->\
"931ed864-6ef2-4192-90e5-0c006c0ee7c3"],

Cell[BoxData[
 RowBox[{"simAnn", "[", 
  RowBox[{"cI", ",", "H", ",", "0.001", ",", "100", ",", "1000"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.762291236830336*^9, 3.762291248013817*^9}, {
  3.762292145575061*^9, 3.7622921493613167`*^9}, {3.7624709293623734`*^9, 
  3.762470934560009*^9}, {3.762531579165948*^9, 
  3.762531588040476*^9}},ExpressionUUID->"0b9fa444-037e-49b9-ba73-\
00c6874623a0"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1912, 1021},
WindowMargins->{{4, Automatic}, {4, Automatic}},
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 96, 0, 98, "Title",ExpressionUUID->"ada263ce-7ba1-44a9-9aa2-0240e65b9f29"],
Cell[679, 24, 822, 13, 104, "Text",ExpressionUUID->"6387751f-932c-4d80-8c1a-777180adb6ed"],
Cell[CellGroupData[{
Cell[1526, 41, 94, 0, 68, "Section",ExpressionUUID->"42c4d0b1-7120-4d9e-84f9-24f1a6df356b"],
Cell[1623, 43, 4811, 105, 715, "Input",ExpressionUUID->"c5d8558a-8990-432e-b18c-3acac8670e79",
 InitializationCell->True],
Cell[6437, 150, 387, 12, 31, "Input",ExpressionUUID->"c27facb9-73d1-42ed-8e80-18a26636f2e6"],
Cell[6827, 164, 9607, 197, 1451, "Input",ExpressionUUID->"58152300-c898-46a6-81bd-97cb8dda7bf4",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[16471, 366, 89, 0, 68, "Section",ExpressionUUID->"f4b7df2c-ac3d-4043-8e8d-9c2db25f5235"],
Cell[16563, 368, 633, 16, 55, "Input",ExpressionUUID->"3a0b464c-23ed-4006-b451-150653f20ee5"],
Cell[17199, 386, 390, 10, 31, "Input",ExpressionUUID->"3b45bbd0-97e4-4226-a580-2f50394fe4dc"],
Cell[17592, 398, 1665, 41, 163, "Input",ExpressionUUID->"9f773b9b-352a-48f9-98f8-0acf7a2eafc5",
 InitializationCell->True],
Cell[19260, 441, 204, 5, 31, "Input",ExpressionUUID->"931ed864-6ef2-4192-90e5-0c006c0ee7c3"],
Cell[19467, 448, 399, 8, 31, "Input",ExpressionUUID->"0b9fa444-037e-49b9-ba73-00c6874623a0"]
}, Open  ]]
}, Open  ]]
}
]
*)

